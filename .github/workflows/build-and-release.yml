name: Build and Release
on:
  push:
    tags:
      - 'v*.*.*'
jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10.6'

      - name: Setup
        run: |
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build Application
        run: pyinstaller --name=macro-py --onefile --windowed --hidden-import=psutil --hidden-import=sqlite3 main.py

      - name: Prepare Update Package
        shell: pwsh
        run: |
          mkdir update_package
          copy dist\macrotool.exe update_package\
          $updateConfig = @{
              version = "${{ github.ref_name }}"
              file_updates = @(
                  @{
                      src = "macrotool.exe"
                      dest = "macrotool.exe"
                  }
              )
          }
          $updateConfig | ConvertTo-Json -Depth 5 | Set-Content update_package\update_config.json
          Compress-Archive update_package\* update.zip

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Changes in this release:
            - Please add release notes here.
          draft: false
          prerelease: false

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/macrotool.exe
          asset_name: macrotool.exe
          asset_content_type: application/octet-stream

      - name: Upload Update Package
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./update.zip
          asset_name: update.zip
          asset_content_type: application/zip
